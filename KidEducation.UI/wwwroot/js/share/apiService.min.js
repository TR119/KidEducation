
var callApiService = {
    del: function (url, data, isLoading = true) {
        return this.callApi('DELETE', url, data, isLoading);
    },
    post: function (url, data, isLoading = true) {
        return this.callApi('POST', url, data, isLoading);
    },
    put: function (url, data, isLoading = true) {
        return this.callApi('PUT', url, data, isLoading);
    },
    get: function (url, isLoading = true) {
        return this.callApi('GET', url, {}, isLoading);
    }
    , callApi: function callApi(method, urls, formData, isLoading) {
        if (isLoading) {
            commonService.loadingOn();
            return new window.Promise((resolve, reject) => {
                $.ajax({
                    method: method,
                    url: urls,
                    data: formData,
                    dataType: "json",
                    success: function (data) {
                        commonService.loadingOff();
                        resolve(data);
                    },
                    error: function (err) {
                        commonService.loadingOff();
                        reject(err);
                    }
                });
            });
        } else {

            return new window.Promise((resolve, reject) => {
                $.ajax({
                    method: method,
                    url: urls,
                    dataType: "json",
                    data: formData,
                    success: function (data) {
                        resolve(data);
                    },
                    error: function (err) {
                        reject(err);
                    }
                });
            });
        }
    },
    uploadFile: function (urls, formdata) {
        commonService.loadingOn();
        return new window.Promise((resolve, reject) => {
            $.ajax({
                method: 'POST',
                url: urls,
                contentType: false,
                processData: false,
                data: formdata,
                dataType: "json",
                success: function (data) {
                    commonService.loadingOff();
                    resolve(data);
                },
                error: function (err) {
                    commonService.loadingOff();
                    reject(err);
                }
            });
        });
    },
    UploadFileWithProgress(formData, url, isLoading) {
        if (isLoading) commonService.loadingOn();
        return new window.Promise((resolve, reject) => {
            $.ajax({
                method: 'POST',
                enctype: 'multipart/form-data',
                url: url,
                contentType: false,
                processData: false,
                data: formData,
                success: function (rp) {
                    resolve(rp);
                },
                error: function (err) {
                    console.log(err);
                    reject(err);
                },
                complete: function () {
                    if (isLoading) commonService.loadingOff();
                },
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            percentComplete = parseInt(percentComplete * 100);
                            $(`#progressBar`).css('width', percentComplete + '%');
                        }
                    }, false);
                    return xhr;
                }
            });
        });
    },
    getBinary: function (url, data, isLoading = true) {
        if (isLoading) commonService.loadingOn();
        return new window.Promise((resolve, reject) => {
            var oReq = new XMLHttpRequest();
            oReq.open("GET", url);
            oReq.responseType = "arraybuffer";
            oReq.onload = function (oEvent) {
                var arrayBuffer = oReq.response; 
                if (arrayBuffer) {
                    var byteArray = new Uint8Array(arrayBuffer);
                    resolve(byteArray);
                }
            };

            oReq.onloadend = () => {
                if (isLoading) commonService.loadingOff();
            }
            oReq.onError = function (err) {
                reject(err);
            },
                oReq.send(null);
        });
    },
    postFormData: function (url, formdata, isLoading) {
        if (isLoading) commonService.loadingOn();
        return new window.Promise((resolve, reject) => {
            $.ajax({
                method: 'POST',
                enctype: 'multipart/form-data',
                url: url,
                contentType: false,
                processData: false,
                data: formdata,
                success: function (data) {
                    resolve(data);
                },
                error: function (err) {
                    reject(err);
                },
                complete: function () {
                    if (isLoading) commonService.loadingOff();
                }
            });
        });
    },

    postFormInvoice: function (urls, formdata) {
        return new window.Promise((resolve, reject) => {
            $.ajax({
                method: 'POST',
                url: urls,
                contentType: false,
                processData: false,
                data: formdata,
                dataType: "json",
                success: function (data) {
                    resolve(data);
                },
                error: function (err) {
                    reject(err);
                }
            });
        });
    }
}

